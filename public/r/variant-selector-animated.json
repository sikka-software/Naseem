{
  "name": "variant-selector-animated",
  "type": "registry:component",
  "dependencies": [
    "lucide-react",
    "@radix-ui/react-radio-group",
    "motion"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\n\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\";\nimport { Circle } from \"lucide-react\";\nimport { AnimatePresence, motion } from \"motion/react\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nexport interface VariantItem {\n  id: string;\n  value: string;\n  label: string;\n}\n\ninterface VariantSelectorAnimatedProps {\n  value: string;\n  onValueChange: (value: string) => void;\n  variants: VariantItem[];\n  className?: string;\n}\n\nconst VariantSelectorAnimated = ({\n  className,\n  onValueChange,\n  value,\n  variants,\n}: VariantSelectorAnimatedProps) => {\n  const [activeStyles, setActiveStyles] = React.useState({\n    height: 0,\n    left: 0,\n    top: 0,\n    width: 0,\n  });\n  const itemsRef = React.useRef<Map<string, HTMLLabelElement>>(new Map());\n\n  React.useLayoutEffect(() => {\n    const getActiveStyles = () => {\n      const activeElement = itemsRef.current.get(value);\n      if (!activeElement) return { height: 0, left: 0, top: 0, width: 0 };\n\n      const parent = activeElement.parentElement;\n      if (!parent) return { height: 0, left: 0, top: 0, width: 0 };\n\n      const parentRect = parent.getBoundingClientRect();\n      const activeRect = activeElement.getBoundingClientRect();\n\n      return {\n        height: activeRect.height,\n        left: activeRect.left - parentRect.left,\n        top: activeRect.top - parentRect.top,\n        width: activeRect.width,\n      };\n    };\n\n    // Use requestAnimationFrame to ensure DOM has updated\n    requestAnimationFrame(() => {\n      const styles = getActiveStyles();\n      setActiveStyles(styles);\n    });\n  }, [value]);\n\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"relative flex flex-wrap gap-1.5 sm:gap-2\", className)}\n      value={value}\n      onValueChange={onValueChange}\n    >\n      <AnimatePresence initial={false}>\n        <motion.div\n          layoutId=\"variant-background\"\n          className=\"absolute rounded-lg border border-lime-300 bg-lime-300/30\"\n          animate={{\n            height: activeStyles.height,\n            left: activeStyles.left,\n            top: activeStyles.top,\n            width: activeStyles.width,\n          }}\n          transition={{\n            bounce: 0.2,\n            duration: 0.6,\n            type: \"spring\",\n          }}\n        />\n      </AnimatePresence>\n\n      {variants.map((variant) => (\n        <label\n          key={variant.id}\n          ref={(el) => {\n            if (el) {\n              itemsRef.current.set(variant.value, el);\n            } else {\n              itemsRef.current.delete(variant.value);\n            }\n          }}\n          className=\"relative flex min-w-[4rem] cursor-pointer flex-col items-center gap-2 rounded-lg px-2.5 py-2 text-center shadow-xs shadow-black/5 outline-offset-2 transition-colors has-data-disabled:cursor-not-allowed has-data-disabled:opacity-50 has-focus-visible:outline has-focus-visible:outline-2 has-focus-visible:outline-ring/70 sm:min-w-[5rem] sm:gap-3 sm:px-4 sm:py-3\"\n        >\n          <RadioGroupPrimitive.Item\n            value={variant.value}\n            className=\"sr-only after:absolute after:inset-0\"\n          >\n            <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n              <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n            </RadioGroupPrimitive.Indicator>\n          </RadioGroupPrimitive.Item>\n          <motion.p className=\"whitespace-nowrap text-sm font-medium leading-none text-foreground\">\n            {variant.label}\n          </motion.p>\n        </label>\n      ))}\n    </RadioGroupPrimitive.Root>\n  );\n};\n\nexport default VariantSelectorAnimated;\n",
      "path": "/components/commerce-ui/variant-selector/animated/variant-selector-animated.tsx",
      "target": "/components/commerce-ui/variant-selector-animated.tsx"
    }
  ]
}